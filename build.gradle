buildscript {
	repositories {
		jcenter()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies { classpath 'org.minimallycorrect.gradle:DefaultsPlugin:0.0.54' }
	configurations.classpath {
		resolutionStrategy.activateDependencyLocking()
	}
}
plugins {
	id 'java'
	id 'java-library'
	id 'groovy'
	id 'maven-publish'
	id "com.gradle.plugin-publish" version "0.10.1"
	id 'java-gradle-plugin'
}

sourceSets.main.java.srcDirs = files('src')
sourceSets.test.java.srcDirs = files('test')

apply plugin: 'org.minimallycorrect.gradle.DefaultsPlugin'

group = 'dev.minco.mapping'
version = '0.0.1-SNAPSHOT'

minimallyCorrectDefaults {
	shipkit = false
	languageLevel = JavaVersion.VERSION_11
	// TODO: make relevant?
	description = ""
	labels = []
	configureProject(project)
}

repositories {
	maven {
		url 'https://maven.fabricmc.net/'
		name 'fabricmc'
		content {
			includeGroup("net.fabricmc")
		}
	}
}

dependencies {
	compileOnly "org.checkerframework:checker-qual:3.1.0"
	testImplementation "junit:junit:4.12"
	api 'org.minimallycorrect.mixin:Mixin:0.0.3'
	implementation 'net.fabricmc:tiny-remapper:0.2.1.63'
	implementation 'net.fabricmc:tiny-mappings-parser:0.2.1.13'
}

allprojects {
	tasks.withType(Test).all {
		maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
	}

	configurations {
		all {
			resolutionStrategy {
				failOnVersionConflict()

				force('com.google.code.findbugs:jsr305:3.0.2')
				def asmVer = '7.2'
				force("org.ow2.asm:asm:$asmVer")
				force("org.ow2.asm:asm-tree:$asmVer")
				force("org.ow2.asm:asm-analysis:$asmVer")
				force("org.ow2.asm:asm-util:$asmVer")
			}
		}
	}
}

gradlePlugin {
	plugins {
		mapping {
			id = 'dev.minco.mapping'
			implementationClass = 'dev.minco.mapping.Plugin'
		}
	}
}

pluginBundle {
	website = 'https://minco.dev/'
	vcsUrl = 'https://github.com/MinimallyCorrect/Mapping'
	// defaults plugin should copy those over
	description = 'TODO'
	tags = ['TODO']

	plugins {
		mapping {
			displayName = 'Mapping'
		}
	}
}

publishing {
	publications {
		pluginMaven(MavenPublication) {
			// sources weren't attached by default? /shrug
			artifact sourcesJar
		}
	}
}
